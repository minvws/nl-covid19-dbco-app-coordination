openapi: 3.0.1
info:
  title: DBCO App - GGD to backend interface
  description: |
    This specification describes the interface between the GGD middleware and the app backend.   
    
    The interface uses higher-level encryption/decryption, hashing and key exchange
    tools provided by the Sodium library (https://libsodium.gitbook.io/doc/).      
  contact:
    name: Ministerie van Volksgezondheid Welzijn en Sport coordination repository
    url: https://github.com/minvws/nl-covid19-dbco-app-coordination
  license:
    name: European Union Public License v. 1.2
    url: https://github.com/minvws/nl-covid19-notification-app-coordination/blob/master/LICENSE.txt
  version: 0.2.1
servers:
  - url: https://tbd.example.com/v1
tags:
  - name: Cases
    description: |
      Registering cases and tasks
paths:
  /cases:
    post:
      tags:
        - Cases    
      summary: Register a new case
      description: |
        This method is called from the DBCO portal to register a new case. It only requires the case identifier
        and will return the device pairing code. The pairing code can be used to pair the
        patient's device to the case and will only be valid for a limited amount of time. The 
        pairing code will be communicated out of bounds to the patient (e.g. by phone or text message).
      requestBody:
        content:
          application/json: 
            schema: 
              $ref: '#/components/schemas/CaseRegistrationRequest'
        required: true
      responses:
        201:
          description: Case registered successfully
          content: 
            application/json: 
              schema:
                $ref: '#/components/schemas/CaseRegistrationResponse'
  /cases/{token}:
    put:
      tags:
        - Cases
      summary: Store a case specific set of tasks.
      description: |
         Store the list of tasks for a specific BCO case. This will be pushed on a per-case basis.
         
         The token is derived from the shared secrets established during the pairing process (see the
         app API spec for more information). The case data is sealed / encrypted using the case specific
         health authority _tx_ shared key and can be unsealed / decrypted by the client using its
         _rx_ shared key.
      parameters:
        - name: token
          in: path
          description: Token derived from the shared secret between client and health authority.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json: 
            schema: 
              $ref: '#/components/schemas/CaseStoreRequest'
        required: true            
      responses:
        204:
          description: Case data accepted
components:
  schemas:
    CaseRegistrationRequest:
      type: object
      required:
        - caseId
      properties:
        caseId: 
          type: string
          description: Case identifier from the GGD system.
        caseExpiresAt:
          type: string
          format: date
          example: "2020-11-10T00:00:00.000Z"
          description: Expiration date/time for submitting data. After this time it is not possible anymore to submit answers for this case.          
    CaseRegistrationResponse:
      type: object
      required:
        - caseId
        - pairingCode
        - pairingCodeExpiresAt
      properties:
        caseId: 
          type: string
          description: Case identifier.
        pairingCode:
          type: string
          description: Random generated device pairing code that can be communicated out-of-band to the patient.
        pairingCodeExpiresAt:
          type: string
          format: date
          example: "2020-11-10T00:00:00.000Z"
          description: Expiration date/time for the pairing code. After this time it is not possible anymore to pair the device to the case.
          
    CaseStoreRequest:
      type: object
      required: 
        - sealedCase
        - caseExpiresAt
      properties:
        sealedCase:
          $ref: '#/components/schemas/SealedData'
        caseExpiresAt:
          type: string
          format: date
          example: "2020-11-10T00:00:00.000Z"
          description: Expiration date/time for the case data. After this time it is not possible anymore for the client to fetch or submit case data.
          
    SealedData:        
      type: object
      description: Encrypted case data using the 'apispec-ggd-out.yaml#/components/schemas/CaseBody' schema.  
      required:
        - ciphertext
        - nonce
      properties:
        ciphertext:
          type: string
          description: Encrypted payload        
        nonce:
          type: string
          description: Nonce used for the encryption                    
