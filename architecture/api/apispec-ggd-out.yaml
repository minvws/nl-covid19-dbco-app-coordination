openapi: 3.0.1
info:
  title: DBCO App - Backend to GGD Interface
  description: |
    This specification describes the interface between the DBCO app backend and the GGD middleware.    
  contact:
    name: Ministerie van Volksgezondheid Welzijn en Sport coordination repository
    url: https://github.com/minvws/nl-covid19-dbco-app-coordination
  license:
    name: European Union Public License v. 1.2
    url: https://github.com/minvws/nl-covid19-notification-app-coordination/blob/master/LICENSE.txt
  version: 0.1.0
servers:
  - url: https://tbd.example.com/v1
tags:
  - name: Tasks
    description: |
      Retrieving tasks
  - name: Results
    description: |
      Delivering data 
paths:
  /questionnaires:
    get:
      tags:
      - Tasks
      summary: The question lists 
      description: |
         Get the list of questions that need to be asked depending on the tasktype and category.
      operationId: getTaskTypes
      responses:
        200:
           description: Task types retrieved succesfully
           content: 
             application/json:
               schema:
                 $ref: '#components/schemas/QuestionnaireListResponse'
           
  /tasks:
    get:
      tags:
        - Tasks
      summary: Get a generic set of tasks that is user independent.
      description: |
         Get the list of tasks that can be used for all users. This will not be fetched on a per-user basis but only a few times per day, as it is fairly static data that doesn't change often.
      operationId: getTasks
      responses:
        200:
          description: Tasks retrieved succesfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskListResponse'
  /cases/{caseId}/tasks:
    get:
      tags:
        - Tasks
      summary: Get a user specific set of tasks.
      description: |
         Get the list of tasks for a specicic BCO case. This will be fetched on a per-user basis.
      parameters:
        - name: caseId
          in: path
          description: caseId to retrieve the tasks for
          required: true
          schema:
            type: string
      operationId: getTasksByCase
      responses:
        200:
          description: Tasks retrieved succesfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskListResponse'
  /cases/{caseId}/results:
    put:
      tags:
        - Results
      summary: Post the results of the tasks to the GGD backend
      description: |
        All answers will be updated every time this method is called. The GGD should replace any data that have the same identifier.
        The response will be entirely encrypted with a public key. This is not reflected in the swagger docs to keep the objects readable.    
      parameters:
        - name: caseId
          in: path
          description: caseId that these contacts belong to
          required: true
          schema:
            type: string
      operationId: postTaskResults
      requestBody:
        content:
          application/json: 
            schema: 
             $ref: '#/components/schemas/TaskResultsRequest'
      responses:
        202:
          description: Data will be processed
components:
  schemas:
    Task:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: A unique id for this task. Used to be able to relate contacts to a task.
          example: 123e4567-e89b-12d3-a456-426614172000
        taskType:
          type: string
          description: currently. only three task types are supported. The taskType determines which standard list of Questions will need to be answered. In the app it can be used to categorize the tasks.
          enum: [housemate, closecontact, othercontact]
          example: closecontact
        label:
          type: string
          description: The (short) label of the task.
          example: Aziz F.
        context:
          type: string
          description: The optional (longer) explanation of the task. 
          example: The goalkeeper of your football match
        category:
          type: string
          description: The BCO category for this task.
          enum: [1, 2a, 2b, 3]
      required: 
        - taskType
        - label
    Answer:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: a unique id for this answer. Generated by the device. If a user updates a contact later, this id will be preserved so that the data can be updated.
          example: 123e4567-e89b-12d3-a456-426614174000
        lastModified:
          type: string
          format: date-time
          description: | 
            The moment this contact was last modified. (Note: this is device generated so may be off due to clock skew, however future updates would have the same skew, so the date can still be used to see that an item was modified)
          example: 2017-07-21T17:32:28Z
        questionId: 
          type: string
          format: uuid
          description: The question that lead to this entry. 
          example: 123e4567-e89b-12d3-a456-426614172000
        value:
          type: object
          anyOf: 
            - $ref: '#/components/schemas/SimpleValue'
            - $ref: '#/components/schemas/ContactDetails'
            - $ref: '#/components/schemas/ContactDetailsFull'
          description: The answer value 
          example: John
      required: 
        - id
        - taskId
        - questionId
        - lastModified
        - value
    Question:
      type: object
      properties:
        id: 
          type: string
          format: uuid
          example: 123e4567-e89b-12d3-a456-426614176000
        questionType: 
          type: string
          description: |
            The type of question. A contactdetails type question is a block of fields with contact details (Dutch: naw gegevens) such as firstname, lastname, phone, email. contactdeatils_full is the same but includes physical address fields.
          enum: [open,contactdetails,contactdetails_full]
          example: contactdetails
        label:
          type: string
          description: The short name of the question
          example: Please provide contact details
        description:
          type: string
          description: An optional, longer description
          example: We use the provided details to combat the epidemic 
      required: 
        - id
        - questioType
        - label
    SimpleValue:
      type: object
      properties: 
        value: 
          type: string
    ContactDetails:
      type: object
      properties:
        firstName:
          type: string
          description: The first name of the contact
          example: John
        lastName:
          type: string
          description: The last name of the contact
          example: Doe
        phoneNumber: 
          type: string
          description: The phone number of the contact
          example: +31612345678
        email: 
          type: string
          format: email
          description: The email address of the contact
          example: john@doe.com
    ContactDetailsFull:
      type: object
      allOf: 
        - $ref: '#/components/schemas/ContactDetails'
        - properties: 
            address1: 
              type: string
              example: Dorpsstraat
            houseNumber: 
              type: string
              example: 13A
            address2:
              type: string
              example: Drie-hoog achter
            zipcode: 
              type: string
              example: 1234AA
            city: 
              type: string
              example: Ons Dorp
    TaskListResponse:
      type: object
      required:
        - tasks      
      properties:
        tasks:
          description: The completed tasks
          type: array
          items:
            $ref: '#/components/schemas/Task'
    QuestionnaireListResponse:
      type: object
      required: 
        - questionnaires
      properties: 
        questionnaires: 
          description: The questionnaires
          type: array
          items: 
            $ref: '#/components/schemas/Questionnaire'
    Questionnaire:
      type: object
      required:
        - questions
        - taskType
      properties:
        id:
          type: string
          format: uuid
        taskType:
          type: string
          description: Depending on the combination taskType / category of a task, the app can determine which questionnaire to ask.
          enum: [housemate, closecontact, othercontact]
          example: closecontact
        category:
          type: string
          description: Depending on the combination taskType / category of a task, the app can determine which questionnaire to ask.
          enum: [1, 2a, 2b, 3] 
          example: 2a
        questions:
          type: array
          items:
            $ref: '#/components/schemas/Question' 
    TaskResult:
      type: object
      required:
        - taskId
        - answers      
      properties:
        taskId: 
          type: string
          format: uuid
          description: |
            The task that lead to this entry. 
          example: 123e4567-e89b-12d3-a456-426614172000
        answers:
          type: array
          items: 
             $ref: '#/components/schemas/Answer'
          description: The answers
    TaskResultsRequest:
      type: object
      required:
        - results
      properties:
        results:
          description: The task results
          type: array
          items:
            $ref: '#/components/schemas/TaskResult'
